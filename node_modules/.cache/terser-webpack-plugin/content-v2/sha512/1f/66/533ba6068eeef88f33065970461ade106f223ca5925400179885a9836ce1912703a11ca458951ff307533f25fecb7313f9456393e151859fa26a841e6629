{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{284:function(t,a,s){\"use strict\";s.r(a);var n=s(14),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"在scratch中调用指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#在scratch中调用指令\"}},[t._v(\"#\")]),t._v(\" 在Scratch中调用指令\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"操作\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#操作\"}},[t._v(\"#\")]),t._v(\" 操作\")]),t._v(\" \"),a(\"p\",[t._v(\"在计算机上运行OpenXMW程序。\")]),t._v(\" \"),a(\"p\",[t._v(\"获取OpenXMW示例作品（点击\"),a(\"a\",{attrs:{href:\"https://world.xiaomawang.com/community/main/compose/DtEj666J\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"这里\"),a(\"OutboundLink\")],1),t._v(\"或\"),a(\"a\",{attrs:{href:\"https://world.xiaomawang.com/community/main/compose/48jj666J\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"这里\"),a(\"OutboundLink\")],1),t._v(\"以跳转）里的自定义积木。\")]),t._v(\" \"),a(\"p\",[t._v(\"使用积木「初始化」以初始化OpenXMW所用到的列表。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/2.png\",alt:\"\"}})]),t._v(\" \"),a(\"p\",[t._v(\"使用积木「增加参数」以将参数加入到本地列表中，每一个键对应一个值，具体参数内容由使用的插件指令决定，或者说，由插件作者决定。如果你想要清空本地列表中的参数，请使用积木「清空参数」。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/3.png\",alt:\"\"}})]),t._v(\" \"),a(\"p\",[t._v(\"设置好参数后，使用积木「封装参数」以将参数列表以字典格式临时保存在变量 tempParams 中。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/4.png\",alt:\"\"}})]),t._v(\" \"),a(\"p\",[t._v(\"使用积木「发送命令」，指定通道序号、指令名称。通道共有14个，序号分别为1到14，也就是说你可以同时进行14个指令的传输。一般的指令名称格式为“插件文件名.指令名”，如果插件中含有自定义类，使用“插件文件名.类名.指令名”，若不止一个自定义类，则使用“插件文件名.类名1.类名2...指令名”。插件作者应该会说明这个。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/5.png\",alt:\"\"}})]),t._v(\" \"),a(\"p\",[t._v(\"等待一小段时间（一般情况下真的很短）后，Python的响应会在本地列表“响应内容”中以字典格式出现，使用积木「解析响应」（需要在积木参数中填入需要解析的响应内容），即可将响应内容的键和值分别解析至本地列表“响应.键”和“响应.值”中，不过，在解析之前，建议先使用积木“清空响应”以清空上一次响应的解析结果。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/6.png\",alt:\"\"}})]),t._v(\" \"),a(\"p\",[t._v(\"接下来，你就可以将本地列表“响应.键”和“响应.值”中的响应解析结果用于作品之中了！\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/7.png\",alt:\"\"}})]),t._v(\" \"),a(\"p\",[t._v(\"下面是一个使用OpenXMW在本地保存文件的例子：\")]),t._v(\" \"),a(\"p\",[t._v(\"在./plugins/files中新建\"),a(\"code\",[t._v(\"保存文件.py\")]),t._v(\"，写入：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-python extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"def\")]),t._v(\" 保存\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"参数\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    文件名 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" 参数\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"文件名\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n    内容 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" 参数\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"内容\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"with\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"open\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"文件名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"w\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"encoding \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"utf-8\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"as\")]),t._v(\" f\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n        f\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"write\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"内容\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"响应\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"文件已写入 %s 文件中!\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"%\")]),t._v(\" 文件名\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"运行OpenXMW后\")]),t._v(\" \"),a(\"p\",[t._v(\"在实际使用中，具体参数键、值以及响应内容键、值的格式应由插件决定。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"注意事项\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#注意事项\"}},[t._v(\"#\")]),t._v(\" 注意事项\")]),t._v(\" \"),a(\"p\",[t._v(\"若不清楚用途，请勿擅自修改OpenXMW示例作品中的任何变量、列表或自定义积木，尤其是OpenXMW的request、response云列表名称等，否则可能导致OpenXMW无法正常工作。\")]),t._v(\" \"),a(\"p\",[t._v(\"若插件使用时出现问题，请查看控制台是否有报错，若有，请先询问插件作者并提供报错内容，若无法解决，再询问OpenXMW作者（即\"),a(\"a\",{attrs:{href:\"https://world.xiaomawang.com/w/person/project/all/1347431\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"hjfunny\"),a(\"OutboundLink\")],1),t._v(\"和\"),a(\"a\",{attrs:{href:\"https://world.xiaomawang.com/w/person/project/all/693633\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Markchai\"),a(\"OutboundLink\")],1),t._v(\"）。对于文档中已有解释的问题不予回复。\")])])}),[],!1,null,null,null);a.default=r.exports}}]);","extractedComments":[]}